import { KeyboardBuilder } from "vk-io"
import prisma from "./module/prisma_client"
import { root, vk } from "../.."
import { Image_Random } from "../core/imagecpu";

function Sleep(ms: number) {
    return new Promise((resolve) => {
        setTimeout(resolve, ms);
    });
}

export async function Main_Menu_Init(context: any) {
    const attached = await Image_Random(context, "bank")
    await vk.api.messages.edit({peer_id: context.peerId, conversation_message_id: context.conversationMessageId, message: `üè¶ –ë–∞–Ω–∫ –ì—Ä–∏–Ω–≥–æ—Ç—Ç—Å –û–Ω–ª–∞–π–Ω 0.99v:`, keyboard: await Main_Menu(context), attachment: attached.toString() })
    await vk.api.messages.sendMessageEventAnswer({
        event_id: context.eventId,
        user_id: context.userId,
        peer_id: context.peerId,
        event_data: JSON.stringify({
            type: "show_snackbar",
            text: "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ì–¥–µ –¥–µ–Ω—å–≥–∏, –õ–µ–±–æ–≤—Å–∫–∏–π?"
        })
    })
}
export async function Exit(context: any) {
    await vk.api.messages.edit({peer_id: context.peerId, conversation_message_id: context.conversationMessageId, message: `üí° –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –≥–æ—Å–¥—É–º—É! –í–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç, –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞`})
    await vk.api.messages.sendMessageEventAnswer({
        event_id: context.eventId,
        user_id: context.userId,
        peer_id: context.peerId,
        event_data: JSON.stringify({
            type: "show_snackbar",
            text: "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
        })
    })
}
export async function Main_Menu(context: any) {
    const user_check: any = await prisma.user.findFirst({ where: { idvk: context.senderId } })
    const keyboard = new KeyboardBuilder()
    .callbackButton({ label: '–ö–∞—Ä—Ç–∞', payload: { command: 'card_enter' }, color: 'secondary' })
    .callbackButton({ label: '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å', payload: { command: 'inventory_enter' }, color: 'secondary' }).row()
    .callbackButton({ label: '–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã', payload: { command: 'artefact_enter' }, color: 'secondary' })
    .callbackButton({ label: '–ö–æ—Å–æ–π –ø–µ—Ä–µ—É–ª–æ–∫', payload: { command: 'shop_enter' }, color: 'positive' }).row()
    .callbackButton({ label: '–£—Å–ª—É–≥–∏', payload: { command: 'service_enter' }, color: 'primary' })
    if (user_check.id_role === 2) {
        keyboard.callbackButton({ label: '–∞–¥–º–∏–Ω—ã', payload: { command: 'admin_enter' }, color: 'secondary' }).row()
        .callbackButton({ label: '–æ–ø–µ—Ä–∞—Ü–∏–∏', payload: { command: 'service_enter' }, color: 'negative' })
    }
    if (user_check.idvk == root) {
        keyboard.callbackButton({ label: '–ø—Ä–∞–≤–∞', payload: { command: 'right_enter' }, color: 'negative' })
    }
    keyboard.callbackButton({ label: 'üö´', payload: { command: 'exit' }, color: 'secondary' }).oneTime().inline()
    return keyboard
}