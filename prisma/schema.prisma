generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  idvk      Int
  name      String
  class     String
  spec      String
  lvl       Int         @default(0)
  gold      Int         @default(60)
  xp        Int         @default(0)
  crdate    DateTime    @default(now())
  id_role   Int         @default(1)
  role      Role        @relation(fields: [id_role], references: [id], onDelete: Cascade)
  Artefact  Artefact[]
  Inventory Inventory[]
  Trigger   Trigger[]
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model Artefact {
  id          Int    @id @default(autoincrement())
  id_user     Int
  name        String
  label       String
  description String
  type        String
  user        User   @relation(fields: [id_user], references: [id], onDelete: Cascade)
}

model Inventory {
  id      Int  @id @default(autoincrement())
  id_user Int
  id_item Int
  item    Item @relation(fields: [id_item], references: [id], onDelete: Cascade)
  user    User @relation(fields: [id_user], references: [id], onDelete: Cascade)
}

model Item {
  id          Int         @id @default(autoincrement())
  name        String
  price       Int
  id_category Int
  type        String
  category    Category    @relation(fields: [id_category], references: [id], onDelete: Cascade)
  Inventory   Inventory[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  Item Item[]
}

model Trigger {
  id      Int     @id @default(autoincrement())
  name    String
  value   Boolean
  user    User    @relation(fields: [id_user], references: [id], onDelete: Cascade, onUpdate: Cascade)
  id_user Int
  crdate DateTime @default(now())
}
